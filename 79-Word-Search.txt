bool solve(vector<vector<char>> &board,string &word,int i,int j,int idx,vector<vector<bool>> &visited){
        if(idx==word.size()){
            return true;
        }
        if(i<0 || j<0 || i>=board.size() || j>=board[0].size() || visited[i][j] || board[i][j]!=word[idx]){
            return false;
        }
        visited[i][j]=true;
        if(solve(board,word,i-1,j,idx+1,visited) || solve(board,word,i+1,j,idx+1,visited) || solve(board,word,i,j-1,idx+1,visited) || solve(board,word,i,j+1,idx+1,visited)){
            return true;
        }
        visited[i][j]=false;
        return false;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int n=board.size();
        int m=board[0].size();
        vector<vector<bool>> visited(n,vector<bool>(m,false));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]==word[0]){
                    if(solve(board,word,i,j,0,visited)){
                        return true;
                    }
                }
            }
        }
        return false;
    }