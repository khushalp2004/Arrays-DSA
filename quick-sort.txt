int partition(vector<int> &arr,int low,int high){
	int pivot=arr[high];//pivot is last element
	int i=low-1;///smaller element;
	
	for(int j=low;j<high;j++){
		if(arr[j]<pivot){
			i++;
			swap(arr[i],arr[j]);
		}
	}
	swap(arr[i+1],arr[high]);
	return i+1;
} 

void quickSortHelper(vector<int> &arr,int low,int high){
	if(low<high){
		int partIndex=partition(arr,low,high);
		quickSortHelper(arr,low,partIndex-1); //left part
		quickSortHelper(arr,partIndex+1,high);///right part
	}
}

void quickSort(vector<int> &arr) {
    int n=arr.size();
	quickSortHelper(arr,0,n-1);
}